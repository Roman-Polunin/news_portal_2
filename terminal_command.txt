Microsoft Windows [Version 10.0.19045.2604]
(c) Корпорация Майкрософт (Microsoft Corporation). Все права защищены.

(venv) C:\DataStore\raining\Skillfactory\PyProject\news_portal\news_portal>python manage.py makemigrations
Migrations for 'news':
  news\migrations\0001_initial.py
    - Create model Author
    - Create model Category
    - Create model Post
    - Create model User
    - Create model PostCategory
    - Add field category to post
    - Create model Comment
    - Add field user to author

(venv) C:\DataStore\raining\Skillfactory\PyProject\news_portal\news_portal>python manage.py migrate        
Operations to perform:
  Apply all migrations: admin, auth, contenttypes, news, sessions
Running migrations:
  Applying news.0001_initial... OK

(venv) C:\DataStore\raining\Skillfactory\PyProject\news_portal\news_portal>python manage.py shell                 
Python 3.9.13 (tags/v3.9.13:6de2ca5, May 17 2022, 16:36:42) [MSC v.1929 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)

1. Создать двух пользователей (с помощью метода User.objects.create_user('username')).

from news.models import *
user1 = User.objects.create_user('someuser1')
user2 = User.objects.create_user('someuser2')
user1.save()
user2.save() 

2. Создать два объекта модели Author, связанные с пользователями.
author1 = Author.objects.create(user=user1)       
author2 = Author.objects.create(user=user2) 
author1.save()
author2.save()

3. Добавить 4 категории в модель Category.
cat_sport = Category.objects.create(name='Sport')
cat_sport.save()
cat_science = Category.objects.create(name='Science')
cat_science.save()
cat_edu = Category.objects.create(name='Education')
cat_edu.save()
cat_taxes = Category.objects.create(name='Taxes')
cat_taxes.save()

4. Добавить 2 статьи и 1 новость.
5. Присвоить им категории (как минимум в одной статье/новости должно быть не меньше 2 категорий).
post1 = Post.objects.create(author=author1,type=1,title='Education now',post_text='Статья о современном образовании в России.')
post1.category.set=3
post1.category.set=2
post1.save()
post1.category.set=cat_edu
post1.save()
post1.category.set=cat_science
post1.save()
post1.category.add(cat_edu)
post1.save()
post1.category.add(cat_science)
post1.save()
post2 = Post.objects.create(author=author1,type=1,title='Education tomorrow',post_text='Статья о будущем в образовании в Мире. Что нас ждет дальше?')
post2.save()
post2.category.add(cat_science)
post2.category.add(cat_edu)
post2.save()
post3 = Post.objects.create(author=author2,type=0,title='Sport:Champions League',post_text='Обзор матчей Лиги Чемпионов. ПЛЕЙ-ОФФ - 1/8. Бавария - ПСЖ.')
post3.save()
post3.category.add(Category.objects.filter(name='Sport').first())
post3.save()

6. Создать как минимум 4 комментария к разным объектам модели Post (в каждом объекте должен быть как минимум один комментарий).
comm1 = Comment.objects.create(post=post1,user=user1,comment_text='Очень интересно!')
comm1.save()
comm2 = Comment.objects.create(post=post2,user=user1,comment_text='Очень интересно!')
comm2.save()
comm3 = Comment.objects.create(post=post3,user=user1,comment_text='Очень интересно!')
comm3.save()
comm3 = Comment.objects.create(post=post3,user=user2,comment_text='Бавария ТОП!')
comm3.save()
comm3 = Comment.objects.create(post=post3,user=user2,comment_text='ПСЖ опять пролетели)))')
comm3.save()

7. Применяя функции like() и dislike() к статьям/новостям и комментариям, скорректировать рейтинги этих объектов.
post1.like()
post1.like()
post1.like()
post1.like()
post1.like()
post2.like() 
post2.like()
post2.like()
for i in range(35):
...     post3.like()
...     i = i+1
... 
post1.save()
post2.save() 
post3.save()
post1.dislike()
post1.dislike()
post2.dislike() 
for i in range(3):
    post3.dislike()
    i = i+1         
... 
post1.save()
post2.save()
post3.save()
comm1.like()
comm1.like()
comm1.like()
comm1.like()
comm2.like()
comm2.like()
comm2.like()
comm3.like()
comm3.like()
comm3 = Comment.objects.filter(id=3).first()
comm3.like()
comm3.like()
comm3.dislike()
comm4 = Comment.objects.filter(id=4).first()
for i in range(1500):
    comm4.like()
    i += 1

comm5 = Comment.objects.filter(id=5).first()
comm5.like()
comm5.like()
comm5.like()
comm4.dislike()
comm5.dislike()
comm1.save()
comm2.save()
comm3.save()
comm4.save()
comm5.save()

8. Обновить рейтинги пользователей.
auth1 = Author.objects.filter(id=1)                                                                                            
auth1[0].author_rating              
1
auth1[0].update_rating()            
auth1[0].author_rating   
38

auth2 = Author.objects.filter(id=2)                                                                                            
auth2[0].author_rating              
1
auth2[0].update_rating()            
auth2[0].author_rating   
3111

9. Вывести username и рейтинг лучшего пользователя (применяя сортировку и возвращая поля первого объекта).
User.objects.filter(id=Author.objects.all().order_by('-author_rating').values('user', 'author_rating').first()['user'])[0].username, Author.objects.all().order_by('-author_rating')
.values('author_rating').first()['author_rating']
('someuser2', 3111)

10. Вывести дату добавления, username автора, рейтинг, заголовок и превью лучшей статьи, основываясь на лайках/дислайках к этой статье.

Post.objects.all().order_by('-post_rating').values('date_create', 'author', 'post_rating', 'title').first()
{'date_create': datetime.datetime(2023, 3, 12, 15, 17, 48, 405116, tzinfo=datetime.timezone.utc), 'author': 2, 'post_rating': 33, 'title': 'Sport:Champions League'}

Post.objects.all().order_by('-post_rating').first().author.user.username 
'someuser2'

Post.objects.all().order_by('-post_rating').first().preview()           
'Обзор матчей Лиги Чемпионов. ПЛЕЙ-ОФФ - 1/8. Бавария - ПСЖ.'

11. Вывести все комментарии (дата, пользователь, рейтинг, текст) к этой статье.
Comment.objects.filter(post_id=Post.objects.all().order_by('-post_rating').first().id).values()                        
<QuerySet [
{'id': 3, 'post_id': 3, 'user_id': 4, 'comment_text': 'Очень интересно!', 'date_create': datetime.datetime(2023, 3, 12, 15, 21, 27, 915693, tzinfo=datetime.timezone.utc), 'c
omment_rating': 2}, 
{'id': 4, 'post_id': 3, 'user_id': 5, 'comment_text': 'Бавария ТОП!', 'date_create': datetime.datetime(2023, 3, 12, 15, 21, 46, 666806, tzinfo=datetime.timezone.utc
), 'comment_rating': 1500}, 
{'id': 5, 'post_id': 3, 'user_id': 5, 'comment_text': 'ПСЖ опять пролетели)))', 'date_create': datetime.datetime(2023, 3, 12, 15, 22, 13, 786981, tzinfo=dat
etime.timezone.utc), 'comment_rating': 5}]>